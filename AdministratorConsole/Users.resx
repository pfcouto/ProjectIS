<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxPhoto.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /YgMqAAAf//Z
</value>
  </data>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>